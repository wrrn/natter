// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rate-limit.proto

package ratelimit

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	empty "github.com/golang/protobuf/ptypes/empty"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SetRateLimitRequest struct {
	Duration             *duration.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SetRateLimitRequest) Reset()         { *m = SetRateLimitRequest{} }
func (m *SetRateLimitRequest) String() string { return proto.CompactTextString(m) }
func (*SetRateLimitRequest) ProtoMessage()    {}
func (*SetRateLimitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e63a383057def7c, []int{0}
}

func (m *SetRateLimitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRateLimitRequest.Unmarshal(m, b)
}
func (m *SetRateLimitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRateLimitRequest.Marshal(b, m, deterministic)
}
func (m *SetRateLimitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRateLimitRequest.Merge(m, src)
}
func (m *SetRateLimitRequest) XXX_Size() int {
	return xxx_messageInfo_SetRateLimitRequest.Size(m)
}
func (m *SetRateLimitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRateLimitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRateLimitRequest proto.InternalMessageInfo

func (m *SetRateLimitRequest) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func init() {
	proto.RegisterType((*SetRateLimitRequest)(nil), "ratelimit.SetRateLimitRequest")
}

func init() { proto.RegisterFile("rate-limit.proto", fileDescriptor_9e63a383057def7c) }

var fileDescriptor_9e63a383057def7c = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x4a, 0x2c, 0x49,
	0xd5, 0xcd, 0xc9, 0xcc, 0xcd, 0x2c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0x89,
	0x80, 0x05, 0xa4, 0xa4, 0xd3, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0x12, 0x49, 0xa5, 0x69,
	0xfa, 0xa9, 0xb9, 0x05, 0x25, 0x95, 0x10, 0x75, 0x52, 0x72, 0xe8, 0x92, 0x29, 0xa5, 0x45, 0x89,
	0x25, 0x99, 0xf9, 0x79, 0x10, 0x79, 0x25, 0x1f, 0x2e, 0xe1, 0xe0, 0xd4, 0x92, 0xa0, 0xc4, 0x92,
	0x54, 0x1f, 0x90, 0x61, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0xa6, 0x5c, 0x1c, 0x30,
	0x85, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x92, 0x7a, 0x10, 0x93, 0xf4, 0x60, 0x26, 0xe9,
	0xb9, 0x40, 0x15, 0x04, 0xc1, 0x95, 0x1a, 0x85, 0x72, 0x71, 0xc2, 0x8d, 0x12, 0xf2, 0xe0, 0xe2,
	0x41, 0x36, 0x5a, 0x48, 0x4e, 0x0f, 0xee, 0x66, 0x3d, 0x2c, 0x76, 0x4a, 0x89, 0x61, 0xd8, 0xe0,
	0x0a, 0xf2, 0x88, 0x12, 0x83, 0x93, 0x5a, 0x94, 0x4a, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e,
	0x72, 0x7e, 0xae, 0x7e, 0x79, 0x51, 0x51, 0x9e, 0x7e, 0x5e, 0x62, 0x49, 0x49, 0x6a, 0x91, 0x7e,
	0x41, 0x76, 0xba, 0x3e, 0xdc, 0xd4, 0x24, 0x36, 0xb0, 0x4e, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x92, 0x4b, 0x86, 0x9c, 0x2f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RateLimitClient is the client API for RateLimit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RateLimitClient interface {
	SetRateLimit(ctx context.Context, in *SetRateLimitRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type rateLimitClient struct {
	cc *grpc.ClientConn
}

func NewRateLimitClient(cc *grpc.ClientConn) RateLimitClient {
	return &rateLimitClient{cc}
}

func (c *rateLimitClient) SetRateLimit(ctx context.Context, in *SetRateLimitRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/ratelimit.RateLimit/SetRateLimit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RateLimitServer is the server API for RateLimit service.
type RateLimitServer interface {
	SetRateLimit(context.Context, *SetRateLimitRequest) (*empty.Empty, error)
}

func RegisterRateLimitServer(s *grpc.Server, srv RateLimitServer) {
	s.RegisterService(&_RateLimit_serviceDesc, srv)
}

func _RateLimit_SetRateLimit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRateLimitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RateLimitServer).SetRateLimit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ratelimit.RateLimit/SetRateLimit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RateLimitServer).SetRateLimit(ctx, req.(*SetRateLimitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RateLimit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ratelimit.RateLimit",
	HandlerType: (*RateLimitServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetRateLimit",
			Handler:    _RateLimit_SetRateLimit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rate-limit.proto",
}
